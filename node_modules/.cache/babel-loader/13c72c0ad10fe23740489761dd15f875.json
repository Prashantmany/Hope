{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTMLCSS\\\\HTMLCodes\\\\hope\\\\src\\\\Components\\\\Get-Hopes.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { gethopes } from '../Redux/actions/hopeActions';\n\nconst Blog = props => /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }\n}, props.hope.Blog_Header), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, props.hope.Blog_Body), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }\n}, props.hope.Blog_Date.substring(0, 10)));\n\nclass Hopeslist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hopes: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/').then(response => {\n      this.setState({\n        hopes: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  hopelist() {\n    return this.state.hopes.map(function (currenthope, i) {\n      return /*#__PURE__*/React.createElement(Blog, {\n        hope: currenthope,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \" Hopes List  \"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, \"Hope Header\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, \"Hope Body\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, \"Date Created\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, this.hopelist())));\n  }\n\n}\n\nHopeslist.PropTypes = {\n  gethopes: PropTypes.func.isRequired,\n  hopes: PropTypes.object\n};\nconst mapStateToProps = {\n  hopes: state.hopes.items,\n  errors: state.errors\n};\nexport default connect(mapStateToProps, {\n  gethopes\n})(Hopeslist);","map":{"version":3,"sources":["D:/HTMLCSS/HTMLCodes/hope/src/Components/Get-Hopes.component.js"],"names":["React","Component","axios","connect","PropTypes","gethopes","Blog","props","hope","Blog_Header","Blog_Body","Blog_Date","substring","Hopeslist","constructor","state","hopes","componentDidMount","get","then","response","setState","data","catch","error","console","log","hopelist","map","currenthope","i","render","marginTop","func","isRequired","object","mapStateToProps","items","errors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {gethopes} from '../Redux/actions/hopeActions';\r\n\r\nconst Blog = props => (\r\n    <tr>\r\n        <td>{props.hope.Blog_Header}</td>\r\n        <td>{props.hope.Blog_Body}</td>\r\n        <td>{props.hope.Blog_Date.substring(0,10)}</td>\r\n    </tr>\r\n)\r\n\r\nclass Hopeslist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hopes: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/')\r\n        .then(response => {\r\n            this.setState({ hopes: response.data });\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    hopelist() {\r\n        return this.state.hopes.map(function (currenthope, i){\r\n            return <Blog hope={currenthope} key={i} />;\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3> Hopes List  </h3>\r\n                <table className ='table table-striped' style ={{ marginTop: 20}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Hope Header</th>\r\n                            <th>Hope Body</th>\r\n                            <th>Date Created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.hopelist() }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nHopeslist.PropTypes = {\r\n    gethopes: PropTypes.func.isRequired,\r\n    hopes: PropTypes.object\r\n}\r\nconst mapStateToProps = {\r\n    hopes: state.hopes.items,\r\n    errors: state.errors\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {gethopes}\r\n)(Hopeslist);"]},"metadata":{},"sourceType":"module"}